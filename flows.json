[
    {
        "id": "4f13ca8d684be14d",
        "type": "tab",
        "label": "read file",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "708ca09a7db425b7",
        "type": "function",
        "z": "4f13ca8d684be14d",
        "name": "save to global object",
        "func": "const arr = msg.payload.split(\"\\n\").filter(line => line.includes(\"=\"));\n/*const config = arr.map(item => {\n    const lineArr = item.split(\"=\");\n    const key = lineArr[0].trim();\n    const value = lineArr[1].trim();\n    return {\n        [key]: value\n    }\n})*/\n\nlet config = {};\narr.forEach(item => {\n    const lineArr = item.split(\"=\");\n    const key = lineArr[0].trim();\n    const value = lineArr[1].trim();\n    config = {\n        ...config,\n        [key]: value\n    }\n});\n\nglobal.set(\"config\", config);\n\nmsg.payload = global.get(\"config\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 200,
        "wires": [
            [
                "c90f5740acea737c"
            ]
        ]
    },
    {
        "id": "2d53f511180b9c21",
        "type": "inject",
        "z": "4f13ca8d684be14d",
        "name": "flow init",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 200,
        "wires": [
            [
                "b090a0b95690d0aa"
            ]
        ]
    },
    {
        "id": "b090a0b95690d0aa",
        "type": "file in",
        "z": "4f13ca8d684be14d",
        "name": "read file",
        "filename": "/usr/lib/node_modules/node-red/config.ini",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 340,
        "y": 200,
        "wires": [
            [
                "708ca09a7db425b7"
            ]
        ]
    },
    {
        "id": "6295cfb665a849a5",
        "type": "http request",
        "z": "4f13ca8d684be14d",
        "name": "http request ok",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 580,
        "y": 340,
        "wires": [
            [
                "c90f5740acea737c",
                "4c97ebb598b2fc3d"
            ]
        ]
    },
    {
        "id": "ce2dd4aff1337e2a",
        "type": "function",
        "z": "4f13ca8d684be14d",
        "name": "bearer token",
        "func": "const config = global.get(\"config\");\n\nmsg.url = `${config.url_token}generate?user=${config.grafana_user}&pass=admin&device=simulador`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 300,
        "wires": [
            [
                "6295cfb665a849a5"
            ]
        ]
    },
    {
        "id": "c9c4b14db6430e5c",
        "type": "inject",
        "z": "4f13ca8d684be14d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 300,
        "wires": [
            [
                "ce2dd4aff1337e2a"
            ]
        ]
    },
    {
        "id": "c90f5740acea737c",
        "type": "debug",
        "z": "4f13ca8d684be14d",
        "name": "payload",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 340,
        "wires": []
    },
    {
        "id": "c8a5f62e1cdaea13",
        "type": "function",
        "z": "4f13ca8d684be14d",
        "name": "pokeapi ex.",
        "func": "msg.url = \"https://pokeapi.co/api/v2/pokemon/ditto\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 380,
        "wires": [
            [
                "6295cfb665a849a5"
            ]
        ]
    },
    {
        "id": "66126125cf1413e9",
        "type": "inject",
        "z": "4f13ca8d684be14d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 380,
        "wires": [
            [
                "c8a5f62e1cdaea13"
            ]
        ]
    },
    {
        "id": "733cf0b48e275753",
        "type": "catch",
        "z": "4f13ca8d684be14d",
        "name": "http request error",
        "scope": [
            "6295cfb665a849a5"
        ],
        "uncaught": false,
        "x": 580,
        "y": 400,
        "wires": [
            [
                "4c97ebb598b2fc3d"
            ]
        ]
    },
    {
        "id": "4c97ebb598b2fc3d",
        "type": "debug",
        "z": "4f13ca8d684be14d",
        "name": "complete",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 400,
        "wires": []
    },
    {
        "id": "92c12bdca922acf4",
        "type": "debug",
        "z": "4f13ca8d684be14d",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 480,
        "wires": []
    },
    {
        "id": "d61533a4508df3d7",
        "type": "function",
        "z": "4f13ca8d684be14d",
        "name": "function 2",
        "func": "const gorillaz = {\n    NODE_TLS_REJECT_UNAUTHORIZED: \"0\"\n};\n\nglobal.set(\"env\", gorillaz);\n\nvar envi = global.get('env');\nmsg.payload = envi;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 480,
        "wires": [
            [
                "92c12bdca922acf4"
            ]
        ]
    },
    {
        "id": "8236156384836d61",
        "type": "inject",
        "z": "4f13ca8d684be14d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 400,
        "y": 480,
        "wires": [
            [
                "d61533a4508df3d7"
            ]
        ]
    }
]